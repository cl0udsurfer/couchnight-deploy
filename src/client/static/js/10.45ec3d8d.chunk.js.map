{"version":3,"sources":["lib/hooks/useScrollToTop.js","lib/graphql/queries/AuthUrl/index.js","lib/graphql/queries/User/index.js","lib/graphql/queries/Listing/index.js","lib/graphql/queries/Listings/index.js","sections/SignIn/Signin.style.js","sections/SignIn/index.js"],"names":["useScrollToTop","useLayoutEffect","window","scrollTo","AUTH_URL","gql","USER","LISTING","LISTINGS","SignInWrapper","styled","div","SignInFormWrapper","themeGet","Title","h2","TitleInfo","p","SignInBannerWrapper","LogoWrapper","SignIn","client","useApolloClient","useContext","AuthContext","viewer","setViewer","useState","googleBtnLoading","state","setState","useMutation","LOG_IN","onCompleted","data","logIn","sessionStorage","setItem","token","displaySuccessNotification","logInData","logInLoading","loading","logInError","error","handleAuth","a","setTimeout","query","location","href","authUrl","logInRef","useRef","useEffect","code","URL","searchParams","get","current","variables","input","id","avatar","to","message","viewerId","logInErrorBannerElement","description","withLink","linkTo","src","couchNight","title","gutter","style","marginBottom","span","className","type","width","size","onClick","backgroundImage","backgroundPosition","height","backgroundSize"],"mappings":"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","file":"static/js/10.45ec3d8d.chunk.js","sourcesContent":["import { useLayoutEffect } from 'react';\n\nconst useScrollToTop = () => {\n  useLayoutEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n};\n\nexport default useScrollToTop;\n","import { gql } from 'apollo-boost';\n\nexport const AUTH_URL = gql`\n  query AuthUrl {\n    authUrl\n  }\n`;\n","import { gql } from 'apollo-boost';\n\nexport const USER = gql`\n  query User($id: ID!, $bookingsPage: Int!, $listingsPage: Int!, $limit: Int!) {\n    user(id: $id) {\n      id\n      name\n      avatar\n      contact\n      hasWallet\n      income\n      bookings(limit: $limit, page: $bookingsPage) {\n        total\n        result {\n          id\n          listing {\n            id\n            title\n            image {\n              url\n            }\n            address\n            price\n          }\n          checkIn\n          checkOut\n        }\n      }\n      listings(limit: $limit, page: $listingsPage) {\n        total\n        result {\n          id\n          title\n          image {\n            url\n          }\n          address\n          price\n        }\n      }\n    }\n  }\n`;\n","import { gql } from 'apollo-boost';\n\nexport const LISTING = gql`\n  query Listing($id: ID!, $bookingsPage: Int!, $limit: Int!) {\n    listing(id: $id) {\n      id\n      title\n      description\n      image {\n        url\n      }\n      host {\n        id\n        name\n        avatar\n        hasWallet\n      }\n      address\n      city\n      admin\n      country\n      location {\n        lat\n        lng\n      }\n      bookings(limit: $limit, page: $bookingsPage) {\n        total\n        result {\n          id\n          tenant {\n            id\n            name\n            avatar\n          }\n          checkIn\n          checkOut\n        }\n      }\n      bookingsIndex\n      price\n      guests\n      wifi\n      airCon\n      pool\n      parking\n    }\n  }\n`;\n","import { gql } from 'apollo-boost';\n\nexport const LISTINGS = gql`\n  query Listings(\n    $location: String\n    $filter: ListingsFilter!\n    $limit: Int!\n    $page: Int!\n  ) {\n    listings(location: $location, filter: $filter, limit: $limit, page: $page) {\n      region\n      location {\n        lat\n        lng\n      }\n      total\n      result {\n        id\n        title\n        image {\n          url\n        }\n        address\n        admin\n        country\n        location {\n          lat\n          lng\n        }\n        price\n      }\n    }\n  }\n`;\n","import styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\nconst SignInWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n`;\n\nexport const SignInFormWrapper = styled.div`\n  width: 43%;\n  padding: 81px;\n\n  @media only screen and (min-width: 1441px) {\n    padding: 130px;\n  }\n\n  @media only screen and (max-width: 1200px) {\n    width: 50%;\n  }\n\n  @media only screen and (max-width: 991px) {\n    padding: 56px;\n    width: 80%;\n    margin: 0 auto;\n  }\n\n  @media only screen and (max-width: 767px) {\n    width: 100%;\n  }\n\n  @media only screen and (max-width: 480px) {\n    padding: 30px;\n  }\n\n  .field-container {\n    .ant-form-item {\n      .ant-form-item-control-wrapper {\n        .ant-form-item-control {\n          .ant-form-item-children {\n            input {\n              border-radius: 3px;\n              border: 1px solid ${themeGet('border.3', '#E6E6E6')};\n              height: 57px;\n              padding: 6px 20px;\n              color: ${themeGet('text.0', '#2C2C2C')};\n              font-size: 15px;\n              &::placeholder {\n                color: ${themeGet('text.2', '#777777')};\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  .signin-btn {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 3px;\n    height: 57px;\n    font-size: 17px;\n    font-weight: 700;\n    border-color: ${themeGet('primary.0', '#008489')};\n    background-color: ${themeGet('primary.0', '#008489')};\n\n    svg {\n      width: 18px;\n      height: 18px;\n      margin-right: 2px;\n    }\n\n    &::after {\n      content: none;\n    }\n\n    &:hover,\n    &:focus {\n      border-color: #008489d1;\n      background-color: #008489d1;\n    }\n  }\n\n  .ant-divider {\n    margin: 41px 0 !important;\n    .ant-divider-inner-text {\n      font-size: 15px;\n      font-weight: 700;\n      color: ${themeGet('text.2', '#777777')};\n    }\n  }\n\n  .ant-btn {\n    &.facebook-btn,\n    &.github-btn,\n    &.firebase-btn,\n    &.google-btn {\n      height: 57px;\n      border-radius: 3px;\n      font-size: 15px;\n      font-weight: 700;\n      &::after {\n        content: none;\n      }\n    }\n\n    &.facebook-btn {\n      border-color: ${themeGet('color.7', '#3b5998')};\n      background-color: ${themeGet('color.7', '#3b5998')};\n    }\n\n    &.github-btn {\n      border-color: ${themeGet('color.14', '#00ACEE')};\n      background-color: ${themeGet('color.14', '#00ACEE')};\n    }\n\n    &.firebase-btn {\n      border-color: ${themeGet('color', '#FFCB2B')};\n      background-color: ${themeGet('color', '#FFCB2B')};\n    }\n\n    &.google-btn {\n      border-color: ${themeGet('color.10', '#dd4b39')};\n      background-color: ${themeGet('color.10', '#dd4b39')};\n    }\n  }\n`;\n\nexport const Title = styled.h2`\n  color: ${themeGet('text.0', '#2C2C2C')};\n  font-size: 45px;\n  line-height: 54px;\n  font-weight: 700;\n  margin-bottom: 0;\n  margin-top: 58px;\n  @media only screen and (max-width: 1600px) {\n    font-size: 38px;\n    line-height: 48px;\n  }\n  @media only screen and (max-width: 1440px) {\n    font-size: 32px;\n    line-height: 42px;\n  }\n  @media only screen and (max-width: 1200px) {\n    font-size: 28px;\n    line-height: 32px;\n  }\n`;\n\nexport const TitleInfo = styled.p`\n  color: ${themeGet('text.2', '#777777')};\n  font-size: 25px;\n  line-height: 30px;\n  margin-bottom: 45px;\n  margin-top: 10px;\n  @media only screen and (max-width: 1600px) {\n    font-size: 22px;\n  }\n  @media only screen and (max-width: 1440px) {\n    font-size: 20px;\n  }\n  @media only screen and (max-width: 1440px) {\n    font-size: 18px;\n  }\n`;\n\nexport const SignInBannerWrapper = styled.div`\n  width: 57%;\n\n  @media only screen and (max-width: 1200px) {\n    width: 50%;\n  }\n\n  @media only screen and (max-width: 991px) {\n    display: none;\n  }\n\n  > div {\n    position: fixed;\n    width: 57%;\n    top: 0;\n    right: 0;\n\n    @media only screen and (max-width: 1200px) {\n      width: 50%;\n    }\n  }\n`;\n\nexport const Text = styled.p`\n  text-align: center;\n  font-size: 15px;\n  font-weight: 700;\n  color: ${themeGet('text.2', '#777777')};\n  line-height: 1;\n  a {\n    color: ${themeGet('primary.0', '#008489')};\n    &:hover,\n    &:focus {\n      outline: none;\n      color: #008489d1;\n      text-decoration: none;\n    }\n  }\n`;\n\nexport const LogoWrapper = styled.div`\n  margin-left: -20px;\n`;\n\nexport default SignInWrapper;\n","import React, { useState, useContext, useRef, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { useApolloClient, useMutation } from '@apollo/react-hooks';\nimport { Button, Col, Row } from 'antd';\n\nimport { ErrorBanner, LoadingSpin, Logo } from 'lib/components';\nimport { AuthContext } from 'lib/context/AuthProvider';\nimport { displaySuccessNotification } from 'lib/utils';\nimport { LOG_IN } from 'lib/graphql/mutations';\nimport { AUTH_URL } from 'lib/graphql/queries';\nimport useScrollToTop from 'lib/hooks/useScrollToTop';\n\nimport couchNight from 'lib/assets/brand/logo_transparent.png';\n\nimport SignInWrapper, {\n  Title,\n  TitleInfo,\n  SignInFormWrapper,\n  SignInBannerWrapper,\n  LogoWrapper,\n} from './Signin.style';\n\nconst imageBg =\n  'https://res.cloudinary.com/dj7nklpkt/image/upload/v1586448495/StockSnap_GCZ32Y9RLS_1_irurbq.jpg';\n\nconst SignIn = () => {\n  useScrollToTop();\n\n  const client = useApolloClient();\n  const { viewer, setViewer } = useContext(AuthContext);\n\n  const [state, setState] = useState({\n    googleBtnLoading: false,\n  });\n\n  const [\n    logIn,\n    { data: logInData, loading: logInLoading, error: logInError },\n  ] = useMutation(LOG_IN, {\n    onCompleted: (data) => {\n      if (data && data.logIn) {\n        setViewer(data.logIn);\n        sessionStorage.setItem('token', data.logIn.token);\n        displaySuccessNotification(\"You've successfully logged in!\");\n      }\n    },\n  });\n\n  const handleAuth = async () => {\n    setState({ ...state, googleBtnLoading: true });\n    setTimeout(() => {\n      setState({ ...state, googleBtnLoading: false });\n    }, 2000);\n    try {\n      const { data } = await client.query({\n        query: AUTH_URL,\n      });\n      window.location.href = data.authUrl;\n    } catch {\n      // Display Error Message!\n    }\n  };\n\n  const logInRef = useRef(logIn);\n\n  useEffect(() => {\n    const code = new URL(window.location.href).searchParams.get('code');\n\n    if (code) {\n      logInRef.current({\n        variables: {\n          input: { code },\n        },\n      });\n    }\n  }, []);\n\n  if (viewer.id && viewer.avatar) {\n    return <Redirect to={`/user/${viewer.id}`} />;\n  }\n\n  if (logInLoading) {\n    return <LoadingSpin message={'Logging you in...'} />;\n  }\n\n  if (logInData && logInData.logIn) {\n    const { id: viewerId } = logInData.logIn;\n    return <Redirect to={`/user/${viewerId}`} />;\n  }\n\n  const logInErrorBannerElement = logInError ? (\n    <ErrorBanner description=\"Sorry! We weren't able to log you in. Please try again later!\" />\n  ) : null;\n\n  return (\n    <SignInWrapper>\n      {logInErrorBannerElement}\n      <SignInFormWrapper>\n        <LogoWrapper>\n          <Logo withLink linkTo='/' src={couchNight} title='CouchNight' />\n        </LogoWrapper>\n        <Title>Welcome Back</Title>\n        <TitleInfo>Please log into your account</TitleInfo>\n\n        <Row gutter={16} style={{ marginBottom: '37px' }}>\n          <Col span={12}>\n            <Button\n              loading={state.googleBtnLoading}\n              className='google-btn'\n              type='primary'\n              style={{ width: '100%', marginBottom: 16 }}\n              size='large'\n              onClick={handleAuth}\n            >\n              Sign In with Google\n            </Button>\n          </Col>\n        </Row>\n      </SignInFormWrapper>\n\n      <SignInBannerWrapper>\n        <div\n          style={{\n            backgroundImage: `url(${imageBg})`,\n            backgroundPosition: 'center center',\n            height: '100vh',\n            backgroundSize: 'cover',\n          }}\n        />\n      </SignInBannerWrapper>\n    </SignInWrapper>\n  );\n};\n\nexport default SignIn;\n"],"sourceRoot":""}